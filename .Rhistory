setwd("~/Área de Trabalho/AD1/ad1-prob5")
setwd("~/Área de Trabalho/AD1/ad1-prob5")
library(tidyverse)
library(here)
library(viridis)
library(broom)
library(modelr)
source(here::here("code/lib.R"))
theme_set(theme_report())
knitr::opts_chunk$set(tidy = FALSE,
fig.width = 6,
fig.height = 5,
echo = FALSE)
paleta = c("#404E4D",
"#92DCE5",
"#938BA1",
"#2D3142",
"#F4743B")
dados = read_projectdata()
dados %>%
ggplot(aes(x = total_despesa / 1000)) +
geom_histogram(binwidth = 50,
boundary = 0,
color = "red", fill = "white")
dados %>%
ggplot(aes(x = total_despesa)) +
geom_histogram(bins = 30, fill = "white", color = "blue") +
scale_x_log10()
dados %>%
ggplot(aes(x = votos)) +
geom_histogram(bins = 30,
boundary = 0,
color = "red", fill = "white")
dados %>%
ggplot(aes(x = votos)) +
geom_histogram(bins = 30, fill = "white", color = "blue") +
scale_x_log10()
dados %>%
ggplot(aes(x = idade, y = votos_prop)) +
geom_point(size = .5, alpha = .4) +
scale_y_log10()
dados %>%
ggplot(aes(x = sexo, y = votos)) +
geom_boxplot() +
scale_y_log10()
dados %>%
ggplot(aes(x = total_despesa, y = votos)) +
geom_point(size = .5) +
scale_x_log10() +
scale_y_log10() +
NULL
dados %>%
ggplot(aes(x = total_despesa, y = votos)) +
geom_point(size = .5) +
scale_x_log10() +
scale_y_log10() +
facet_wrap(~ UF)
dados = dados %>%
mutate(votos_log = log10(votos),
gastos_log = log10(total_despesa))
dados = dados %>%
mutate(votos_log = log10(votos),
gastos_log = log10(total_despesa))
pb = dados %>%
filter(UF == "PB")
pb %>%
ggplot() +
aes(x = votos_log, y = gastos_log) +
geom_point(size = 2, alpha = .6)
pb %>%
ggplot() +
aes(y = votos_log, x = gastos_log) +
geom_point(size = 2, alpha = .6) +
geom_abline(intercept = -.5,
slope = .95,
color = "darkorange") +
geom_abline(intercept = .18,
slope = .8,
color = "darkgreen") +
NULL
dados %>%
filter(UF == "MT") %>%
ggplot() +
aes(y = votos_log, x = gastos_log) +
geom_point(size = 2, alpha = .6) +
geom_abline(slope = 0,
intercept = 3,
color = "darkorange")
modelo_pb = lm(votos_log ~ gastos_log,
data = pb)
tidy(modelo_pb)
pb %>%
add_predictions(model = modelo_pb) %>%
ggplot(aes(x = gastos_log, y = votos_log)) +
geom_point(alpha = 0.4) +
geom_line(aes(y = pred), colour = "red") +
NULL
x = pb %>%
add_residuals(model = modelo_pb) %>%
ggplot(aes(x = gastos_log, y = resid, label = nome)) +
geom_point(alpha = 0.4, size = 3) +
geom_hline(yintercept = 0)
x
plotly::ggplotly(x)
glance(modelo_pb)
knitr::opts_chunk$set(echo = TRUE)
dados = read.csv("speed-dating.csv")
View(dados)
View(dados)
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(intel)) %>%
ggplot(aes(x = like, y = intel)) +
geom_count()
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(intel)) %>%
ggplot(aes(x = like, y = intel)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(intel)) %>%
ggplot(aes(x = like, y = intel, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(sinc)) %>%
ggplot(aes(x = like, y = sinc, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(amb)) %>%
ggplot(aes(x = like, y = amb, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
filter(!is.na(like)) %>%
filter(!is.na(shar)) %>%
ggplot(aes(x = like, y = shar, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(shar ~ like,
data = dados)
tidy(modelo)
glance(modelo)
modelo = dados %>%
filter(!is.na(like)) %>%
filter(!is.na(shar)) %>%
lm(shar ~ like)
dados = read.csv("speed-dating.csv")
dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados = read.csv("speed-dating.csv")
%>% filter(!is.na(like)) %>%
dados = read.csv("speed-dating.csv")
dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados = read.csv("speed-dating.csv")
dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados = read.csv("speed-dating.csv")
dados = read.csv("speed-dating.csv")
dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados %>%
ggplot(aes(x = like, y = shar, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
ggplot(aes(x = like, y = shar, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados %>%
ggplot(aes(x = like, y = shar, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
knitr::opts_chunk$set(echo = TRUE)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(shar))
dados %>%
ggplot(aes(x = like, y = shar, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(shar ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(order))
dados %>%
ggplot(aes(x = like, y = order, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(order ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(attr))
dados %>%
ggplot(aes(x = like, y = attr, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(attr ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(intel))
dados %>%
ggplot(aes(x = like, y = intel, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(intel ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados %>%
ggplot(aes(x = like, y = int_corr, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(int_corr))
dados %>%
ggplot(aes(x = like, y = int_corr, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(int_corr ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(samerace))
dados %>%
ggplot(aes(x = like, y = samerace, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(samerace ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun))
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(fun ~ like,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(shar))
modelo = lm(like ~ fun + shar,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(fun + shar ~ like,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + shar,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(shar)) %>%
filter(!is.na(intel))
modelo = lm(like ~ fun + shar + intel,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(complete.cases())
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(complete.cases(dados))
View(dados)
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(like ~ fun + intel,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(intel)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(fun))
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr + gender,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + attr,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(prob)) %>%
filter(!is.na(shar)) %>%
filter(!is.na(fun))
modelo = lm(like ~ prob + shar,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ prob + shar + fun,
data = dados)
tidy(modelo)
glance(modelo)
setwd("C:/Users/gabim/Desktop/AD1/ad1-prob5")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("stringi")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(viridis)
library(knitr)
library(broom)
library(modelr)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(amb))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(viridis)
library(knitr)
library(broom)
library(modelr)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(amb))
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_count() +
labs(x = "O quanto p1 gostou de p2", y = "Quão divertido p1 achou p2", color = "O quanto p1 gostou de p2", size = "Quantidade de p1")
dados %>%
ggplot(aes(x = like, y = attr, color = like)) +
geom_count() +
labs(x = "O quanto p1 gostou de p2", y = "Quão atraente p1 achou p2", color = "O quanto p1 gostou de p2", size = "Quantidade de p1")
modelo1 = lm(like ~ amb,
data = dados)
kable(tidy(modelo1))
kable(glance(modelo1))
dados %>%
add_predictions(model = modelo1) %>%
ggplot(aes(x = amb, y = like)) +
geom_count() +
geom_line(aes(y = pred), colour = "red") +
labs(x = "Quão ambicioso p1 achou p2", y = "O quanto p1 gostou de p2", size = "Quantidade de p1") +
NULL
modelo = lm(like ~ fun + attr,
data = dados)
kable(tidy(modelo))
kable(glance(modelo))
dados %>%
add_predictions(model = modelo) %>%
ggplot(aes(x = fun, y = like, color = attr)) +
geom_count() +
geom_smooth(method = lm, color = "red") +
labs(x = "O quanto p1 gostou de p2", y = "Quão divertido p1 achou p2", color = "Quão atraente p1 achou p2", size = "Quantidade de p1") +
NULL
