geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(int_corr ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(samerace))
dados %>%
ggplot(aes(x = like, y = samerace, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(samerace ~ like,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun))
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(fun ~ like,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(shar))
modelo = lm(like ~ fun + shar,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(fun + shar ~ like,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + shar,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(shar)) %>%
filter(!is.na(intel))
modelo = lm(like ~ fun + shar + intel,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(complete.cases())
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(complete.cases(dados))
View(dados)
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_point(size = .5, alpha = .4, position = "jitter")
modelo = lm(like ~ fun + intel,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(intel)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(fun))
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr + gender,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + intel + attr,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ fun + attr,
data = dados)
tidy(modelo)
glance(modelo)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(prob)) %>%
filter(!is.na(shar)) %>%
filter(!is.na(fun))
modelo = lm(like ~ prob + shar,
data = dados)
tidy(modelo)
glance(modelo)
modelo = lm(like ~ prob + shar + fun,
data = dados)
tidy(modelo)
glance(modelo)
setwd("C:/Users/gabim/Desktop/AD1/ad1-prob5")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("stringi")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(viridis)
library(knitr)
library(broom)
library(modelr)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(amb))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(viridis)
library(knitr)
library(broom)
library(modelr)
dados = read.csv("speed-dating.csv")
dados = dados %>% filter(!is.na(like)) %>%
filter(!is.na(fun)) %>%
filter(!is.na(attr)) %>%
filter(!is.na(amb))
dados %>%
ggplot(aes(x = like, y = fun, color = like)) +
geom_count() +
labs(x = "O quanto p1 gostou de p2", y = "Quão divertido p1 achou p2", color = "O quanto p1 gostou de p2", size = "Quantidade de p1")
dados %>%
ggplot(aes(x = like, y = attr, color = like)) +
geom_count() +
labs(x = "O quanto p1 gostou de p2", y = "Quão atraente p1 achou p2", color = "O quanto p1 gostou de p2", size = "Quantidade de p1")
modelo1 = lm(like ~ amb,
data = dados)
kable(tidy(modelo1))
kable(glance(modelo1))
dados %>%
add_predictions(model = modelo1) %>%
ggplot(aes(x = amb, y = like)) +
geom_count() +
geom_line(aes(y = pred), colour = "red") +
labs(x = "Quão ambicioso p1 achou p2", y = "O quanto p1 gostou de p2", size = "Quantidade de p1") +
NULL
modelo = lm(like ~ fun + attr,
data = dados)
kable(tidy(modelo))
kable(glance(modelo))
dados %>%
add_predictions(model = modelo) %>%
ggplot(aes(x = fun, y = like, color = attr)) +
geom_count() +
geom_smooth(method = lm, color = "red") +
labs(x = "O quanto p1 gostou de p2", y = "Quão divertido p1 achou p2", color = "Quão atraente p1 achou p2", size = "Quantidade de p1") +
NULL
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
install.packages("pscl")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
library(here)
dados = read.csv("speed-dating2.csv")
View(dados)
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + prob + amb + intel + intel * shar,
data = data,
family = "binomial") -> bm
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + prob + amb + intel + intel * shar,
data = dados,
family = "binomial") -> bm
tidy(bm, conf.int = TRUE) %>%
select(-statistic, -p.value)
tidy(bm, conf.int = TRUE, exponentiate = TRUE) %>%
select(-statistic, -p.value)
glance(bm)
pR2(bm)
tidy(bm,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "darkred") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
dados %>%
ggplot(aes(x = like, fill = dec)) +
geom_bar(position = "dodge")
dados %>%
ggplot(aes(x = intel, fill = dec)) +
geom_bar(position = "dodge")
dados %>%
ggplot(aes(x = fun, fill = dec)) +
geom_bar(position = "dodge")
dados %>%
ggplot(aes(x = attr, fill = dec)) +
geom_bar(position = "dodge")
titanic %>%
ggplot(aes(x = dec, y = fun)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count() +
coord_flip()
dados %>%
ggplot(aes(x = dec, y = fun)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count() +
coord_flip()
dados %>%
ggplot(aes(x = dec, y = attr)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count() +
coord_flip()
dados %>%
ggplot(aes(x = dec, y = intel)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count() +
coord_flip()
dados %>%
ggplot(aes(x = dec, y = fun)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count() +
coord_flip()
dados %>%
filter(fun > 0) %>%
ggplot(aes(x = dec, y = fun)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count(alpha = .5) +
coord_flip() +
scale_y_log10()
dados %>%
filter(attr > 0) %>%
ggplot(aes(x = dec, y = attr)) +
geom_violin(aes(fill = dec), alpha = .4) +
geom_count(alpha = .5) +
coord_flip() +
scale_y_log10()
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + prob + intel,
data = dados,
family = "binomial") -> bm
tidy(bm, conf.int = TRUE) %>%
select(-statistic, -p.value)
tidy(bm, conf.int = TRUE, exponentiate = TRUE) %>%
select(-statistic, -p.value)
glance(bm)
pR2(bm)
tidy(bm,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "darkred") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
dados = read.csv("speed-dating2.csv")
dados <- dados %>%
select(gender, music, movies, samerace,sports, reading,dec) %>%
na.omit() %>%
mutate(gender = case_when(.$gender == 0 ~ "Mulher", .$gender == 1 ~ "Homem"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
library(here)
dados = read.csv("speed-dating2.csv")
dados <- dados %>%
select(gender, music, movies, samerace,sports, reading,dec) %>%
na.omit() %>%
mutate(gender = case_when(.$gender == 0 ~ "Mulher", .$gender == 1 ~ "Homem"))
ggpairs(dados, progress = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
library(here)
library(GGally)
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
library(here)
library(GGally)
dados = read.csv("speed-dating2.csv")
dados <- dados %>%
select(gender, music, movies, samerace,sports, reading,dec) %>%
na.omit() %>%
mutate(gender = case_when(.$gender == 0 ~ "Mulher", .$gender == 1 ~ "Homem"))
ggpairs(dados, progress = FALSE)
x = dados %>%
mutate(dec = as.factor(dec),
gender = as.factor(gender))
model = glm(dec ~ music + movies + samerace + sports + reading,
data = x,
family = "binomial")
tidy(model, conf.int = TRUE)
tidy(model, conf.int = TRUE, exponentiate = TRUE)
glance(model)
pR2(model)
broom::tidy(model,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "blue") +
labs(x = "Fatores",
title = "Regressão Logistica",
y = expression(paste("estimativa ", " (95% confiança)"))) +
ylim(0,3)
dados = read.csv("speed-dating2.csv")
dados <- dados %>%
select(attr, fun, intel, amb,sinc,dec) %>%
na.omit()
ggpairs(dados, progress = FALSE)
x = dados %>%
mutate(dec = as.factor(dec),
gender = as.factor(gender))
x = dados %>%
mutate(dec = as.factor(dec),
attr = as.factor(attr))
model = glm(dec ~ fun + intel + amb + sinc + attr,
data = x,
family = "binomial")
tidy(model, conf.int = TRUE)
tidy(model, conf.int = TRUE, exponentiate = TRUE)
glance(model)
pR2(model)
broom::tidy(model,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "blue") +
labs(x = "Fatores",
title = "Regressão Logistica",
y = expression(paste("estimativa ", " (95% confiança)"))) +
ylim(0,3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(pscl)
library(here)
dados = read.csv("speed-dating2.csv")
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + prob + intel,
data = dados,
family = "binomial") -> bm
tidy(bm, conf.int = TRUE) %>%
select(-statistic, -p.value)
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
dados = read.csv("speed-dating2.csv")
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, prob, amb, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + prob + intel,
data = dados,
family = "binomial") -> bm
tidy(bm, conf.int = TRUE) %>%
select(-statistic, -p.value)
tidy(bm, conf.int = TRUE, exponentiate = TRUE) %>%
select(-statistic, -p.value)
glance(bm)
pR2(bm)
tidy(bm,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "darkred") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
dados %>%
na.omit(dec, like, fun, attr, shar, sinc, intel) -> dados
glm(dec ~ like + fun + attr + shar + sinc + intel,
data = dados,
family = "binomial") -> bm
tidy(bm, conf.int = TRUE) %>%
select(-statistic, -p.value)
tidy(bm, conf.int = TRUE, exponentiate = TRUE) %>%
select(-statistic, -p.value)
glance(bm)
pR2(bm)
tidy(bm,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_point(color = "red", size = 2) +
geom_hline(yintercept = 1, colour = "darkred") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
tidy(bm,
conf.int = TRUE,
conf.level = 0.95,
exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate,
ymin = conf.low,
ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_hline(yintercept = 1, colour = "darkred") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
tidy(bm, conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_hline(yintercept = 1, colour = "red") +
labs(x = "Predictor variable",
title = "Exponentiated logistic regression terms",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(xts)
library(resample)
dados = read.csv("github.csv")
dados = dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados = dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
dias_da_semana = c('segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', "sábado", "domingo")
dados.semana = dados
experiment1 = data.frame()
for(day in dias_da_semana) {
b = bootstrap(subset(dados.semana, week_day==day) , median(users))
days.median = CI.percentile(b, probs = c(.025, .975))
names(days.median) = c('X2.5', 'X97.5')
days.median$day = day
experiment1 = data.frame(rbind(experiment1, data.frame(days.median)))
}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(here)
library(xts)
library(resample)
dados = read.csv("github.csv")
dados = dados %>% mutate(full_date = paste(month_day, the_month, the_year, sep = '-'))
dados = dados %>% mutate(week_day= weekdays(as.Date(full_date,'%d-%m-%Y')))
tidy(bm, conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
#filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_hline(yintercept = 1, colour = "red") +
labs(x = "Variável",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
tidy(bm, conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(term, estimate, ymin = conf.low, ymax = conf.high)) +
geom_errorbar(size = 0.8, width= 0.4) +
geom_hline(yintercept = 1, colour = "red") +
labs(x = "Variável",
y = expression(paste("estimated ", 'e'^{'B'}," (95% confidence)"))) +
ylim(0,3)
