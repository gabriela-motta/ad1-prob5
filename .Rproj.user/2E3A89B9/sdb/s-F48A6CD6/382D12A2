{
    "collab_server" : "",
    "contents" : "---\ntitle: \"$ e votos nas campanhas de 2014\"\noutput:\n    html_document:\n    df_print: paged\ntheme: sandstone\n---\n\n```{r echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(viridis)\n\nlibrary(broom)\nlibrary(modelr)\n\nsource(here::here(\"code/lib.R\"))\ntheme_set(theme_report())\n\nknitr::opts_chunk$set(tidy = FALSE,\n                      fig.width = 6,\n                      fig.height = 5,\n                      echo = FALSE)\n\npaleta = c(\"#404E4D\",\n           \"#92DCE5\",\n           \"#938BA1\",\n           \"#2D3142\",\n           \"#F4743B\")\n```\n\n```{r read}\ndados = read_projectdata()\n```\n\n```{r}\ndados %>% \n    ggplot(aes(x = total_despesa / 1000)) + \n    geom_histogram(binwidth = 50, \n                   boundary = 0, \n                   color = \"red\", fill = \"white\") \n\ndados %>% \n    ggplot(aes(x = total_despesa)) + \n    geom_histogram(bins = 30, fill = \"white\", color = \"blue\") + \n    scale_x_log10()\n```\n\n```{r}\ndados %>% \n    ggplot(aes(x = votos)) + \n    geom_histogram(bins = 30, \n                   boundary = 0, \n                   color = \"red\", fill = \"white\") \n\ndados %>% \n    ggplot(aes(x = votos)) + \n    geom_histogram(bins = 30, fill = \"white\", color = \"blue\") + \n    scale_x_log10()\n```\n\n\n```{r}\ndados %>% \n    ggplot(aes(x = idade, y = votos_prop)) + \n    geom_point(size = .5, alpha = .4) + \n    scale_y_log10()\n```\n\n```{r}\ndados %>% \n    ggplot(aes(x = sexo, y = votos)) + \n    geom_boxplot() + \n    scale_y_log10()\n```\n\n\n```{r}\ndados %>% \n    ggplot(aes(x = total_despesa, y = votos)) + \n    geom_point(size = .5) + \n    scale_x_log10() +\n    scale_y_log10() +\n    NULL\n```\n\n```{r}\ndados %>% \n    ggplot(aes(x = total_despesa, y = votos)) + \n    geom_point(size = .5) + \n    scale_x_log10() + \n    scale_y_log10() + \n    facet_wrap(~ UF)\n```\n\n```{r}\ndados = dados %>% \n    mutate(votos_log = log10(votos), \n           gastos_log = log10(total_despesa))\n```\n\n\n```{r}\npb = dados %>% \n    filter(UF == \"PB\") \n    \n\npb %>% \n    ggplot() + \n    aes(x = votos_log, y = gastos_log) + \n    geom_point(size = 2, alpha = .6)\n```\n\n**ESCOLHA OS COEFICIENTES DA LINHA ABAIXO PARA ALCANÇAR O MELHOR FIT**\n\n```{r}\npb %>% \n    ggplot() + \n    aes(y = votos_log, x = gastos_log) + \n    geom_point(size = 2, alpha = .6) + \n    geom_abline(intercept = -.5, \n                slope = .95, \n                color = \"darkorange\") + \n    geom_abline(intercept = .18, \n                slope = .8, \n                color = \"darkgreen\") + \n    NULL\n```\n\nE se os dados fossem de MT? \n\n```{r}\ndados %>% \n    filter(UF == \"MT\") %>% \n    ggplot() + \n    aes(y = votos_log, x = gastos_log) + \n    geom_point(size = 2, alpha = .6) + \n    geom_abline(slope = 0, \n                intercept = 3, \n                color = \"darkorange\")\n\n```\n\n## Usando o computador para achar a linha\n\n## Na PB\n\nO modelo\n\n```{r}\nmodelo_pb = lm(votos_log ~ gastos_log, \n               data = pb)\n\ntidy(modelo_pb)\n```\n\nVisualizar o modelo\n\n```{r}\npb %>% \n    add_predictions(model = modelo_pb) %>% \n    ggplot(aes(x = gastos_log, y = votos_log)) + \n    geom_point(alpha = 0.4) + \n    geom_line(aes(y = pred), colour = \"red\") + \n    NULL\n\n```\n\n```{r}\nx = pb %>% \n    add_residuals(model = modelo_pb) %>% \n    ggplot(aes(x = gastos_log, y = resid, label = nome)) + \n    geom_point(alpha = 0.4, size = 3) + \n    geom_hline(yintercept = 0)\n\nx\n\nplotly::ggplotly(x)\n```\n\n\nA qualidade do ajuste (fit)\n\n```{r}\nglance(modelo_pb)\n```\n\n## E no MT? \n\n```{r}\n\n```\n\n\nAo final, você deve conseguir preencher o seguinte texto: \n\n> Regressão linear (via mínimos quadrados ordinários) foi utilizada para analisar se <VarIndep1> tem uma associação (significativa -- se fosse inferência) com <VarDep>. Os resultados da regressão indicam que o modelo com preditor no formato <VarDep> = <XXX>.VarIndep1 + <Intercept> explica <XX,XX>% da variância da variável de resposta (R2 = <XX,XX>). <VarIndep1>, medida como/em [unidade ou escala] tem uma relação com <VarDep> (b = <YY>) tal que o aumento de 1 unidade de VarIndep1 produz uma mudança de xxx em <VarDep>.\n\n---\n\n# Múltiplas variáveis preditoras\n\n```{r}\nmodelo_pb = lm(votos_log ~ gastos_log + sexo, data = pb)\n\ntidy(modelo_pb)\n```\n\nVisualizar o modelo\n\n```{r}\npb %>% \n    add_predictions(model = modelo_pb) %>% \n    ggplot(aes(x = gastos_log, \n               y = votos_log, \n               group = sexo, \n               color = sexo)) + \n    geom_point(alpha = 0.4) + \n    geom_line(aes(y = pred, color = sexo))  \n```\n\n```{r}\nx = pb %>% \n    add_residuals(model = modelo_pb) %>% \n    ggplot(aes(x = gastos_log, y = resid, label = nome)) + \n    geom_point(alpha = 0.4, size = 3) + \n    geom_hline(yintercept = 0)\n\nx\n\nplotly::ggplotly(x)\n```\n\n\nA qualidade do ajuste (fit)\n\n```{r}\nglance(modelo_pb)\n```\n\n## E em outro estado? \n\n```{r}\n\n```\n\n",
    "created" : 1532605366975.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3893167191",
    "id" : "382D12A2",
    "lastKnownWriteTime" : 1532349381,
    "last_content_update" : 1532605475437,
    "path" : "~/Downloads/gastos-e-votos-master/reports/regressao-votos.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}